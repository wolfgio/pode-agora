html {
  margin: 0;
  padding: 0;
  border: 0;
  background-color: #A3E4BE; }

body, div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, code, del, dfn, em, img, q, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, dialog, figure, footer, header, hgroup, nav, section {
  margin: 0;
  padding: 0;
  border: 0;
  font-weight: inherit;
  font-style: inherit;
  font-size: 16px;
  font-family: 'Roboto', sans-serif;
  vertical-align: baseline; }

article, aside, dialog, figure, footer, header, hgroup, nav, section {
  display: block; }

body {
  line-height: 1.5;
  background: white; }

table {
  border-collapse: separate;
  border-spacing: 0; }

caption, th, td {
  text-align: left;
  font-weight: normal;
  float: none !important; }

table, th, td {
  vertical-align: middle; }

blockquote before, blockquote after, q before, q after {
  content: ''; }

a img {
  border: none; }

b, i {
  display: none; }

/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

.container {
  width: 100%;
  max-width: 1128px;
  margin: 0 auto; }

.animated {
  -webkit-animation-duration: 2s;
  animation-duration: 2s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both; }

#loading {
  background-color: #A3E4BE;
  display: block;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 9999;
  width: 100%;
  min-height: 100vh;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center; }

.main-header {
  display: block;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 9999;
  width: 100%;
  background: #FAFAFA;
  -webkit-animation-duration: 2.5s;
  animation-duration: 2.5s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both; }
  .main-header > .container {
    padding: 0 20px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between; }

.menu {
  list-style: none;
  padding: 10px 0px; }
  .menu > li {
    font-size: 20px;
    display: inline-block;
    padding: 0 20px; }
    .menu > li > a {
      color: #A3E4BE;
      text-decoration: none !important;
      padding-bottom: 20px;
      border-bottom: 4px solid transparent;
      -webkit-transition: all .2s ease-in;
      transition: all .2s ease-in; }
    .menu > li a:hover {
      border-bottom: solid 3px #9B51E0; }
    .menu > li .active {
      border-bottom: solid 3px #9B51E0; }

.logo {
  padding: 15px 0px 5px 15px;
  width: 80px;
  height: 32px; }

@media screen and (min-width: 320px) and (max-width: 770px) {
  .main-header > .container {
    padding: 0 0px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center; }
  .menu {
    list-style: none;
    padding: 10px 0px; }
    .menu > li {
      font-size: 15px;
      display: inline-block;
      padding: 0 5px; }
      .menu > li a:hover {
        border-bottom: solid 3px transparent; }
      .menu > li .active {
        border-bottom: solid 3px transparent; } }

.banner {
  background: url(../../../../images/bg.png) no-repeat;
  background-size: cover;
  background-attachment: fixed;
  background-position: center;
  height: 100%;
  min-height: 100vh;
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center; }
  .banner > .wrapper {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center; }
    .banner > .wrapper > h1 {
      color: #FAFAFA;
      margin: 0px 0px 5px 0px;
      font-size: 48px;
      font-weight: 700; }
    .banner > .wrapper > label button {
      margin: 0;
      background-color: #A3E4BE;
      color: #FAFAFA;
      min-width: 200px;
      height: 100%;
      padding: 8px 35px;
      margin-top: 16px;
      margin-bottom: 16px;
      font-size: 1em;
      font-weight: 600;
      letter-spacing: 1.2px;
      border: solid 2px transparent;
      border-radius: 3.00px;
      -webkit-transition: all .2s ease-in;
      transition: all .2s ease-in;
      text-transform: uppercase;
      outline: none; }
    .banner > .wrapper > label button:hover {
      -webkit-box-shadow: 0px 2px 14px rgba(0, 0, 0, 0.25);
              box-shadow: 0px 2px 14px rgba(0, 0, 0, 0.25); }
    .banner > .wrapper > label button:active {
      background-color: #74a588; }

@media screen and (min-width: 320px) and (max-width: 770px) {
  .banner > .wrapper > h1 {
    text-align: center;
    font-size: 25px; } }

.content-container {
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start; }
  .content-container > section {
    opacity: 0;
    -webkit-box-flex: 0;
        -ms-flex: 0 0 33.333%;
            flex: 0 0 33.333%;
    min-height: 530px;
    -webkit-animation-duration: 2.3s;
    animation-duration: 2.3s;
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
    text-align: center; }
    .content-container > section > img {
      width: 80px;
      height: 78px;
      padding: 120px 0 40px 0; }
    .content-container > section > p {
      margin: 0 auto;
      padding-bottom: 120px;
      width: 60%;
      color: #FAFAFA;
      font-size: 22px;
      font-weight: 300;
      text-transform: uppercase; }

#sec1 {
  background-color: #A3E4BE; }

#sec2 {
  background-color: #9B51E0; }

#sec3 {
  background-color: #F2994A; }

@media screen and (min-width: 320px) and (max-width: 770px) {
  .content-container {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column; }
    .content-container > section {
      -webkit-box-flex: 1;
          -ms-flex: 1;
              flex: 1; } }

.specialization h3 {
  color: #A3E4BE;
  text-align: center;
  padding: 40px 0;
  font-size: 25px; }

.specialization ul {
  list-style: none; }
  .specialization ul li {
    padding: 8px;
    background: url("../../../../images/femenine.svg") no-repeat;
    background-position: 20px;
    padding-left: 40px; }
    .specialization ul li a {
      text-decoration: none;
      color: #A3E4BE; }
  .specialization ul li:hover {
    background: #A3E4BE url("../../../../images/femenine.svg") no-repeat; }
    .specialization ul li:hover a {
      color: #FAFAFA; }
  .specialization ul .kids-services a {
    color: #F2994A; }
  .specialization ul .kids-services label {
    color: #9B51E0;
    padding-left: 10px;
    font-size: 13px; }

.service {
  background: transparent;
  height: 100%;
  min-height: 100vh;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center; }

.cards-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  padding-bottom: 80px; }

.service-card {
  width: 100%;
  max-width: 300px;
  min-height: 360px;
  padding: 8px;
  border-radius: 3px;
  background: #FAFAFA;
  -webkit-box-shadow: 0px 5px 7px rgba(0, 0, 0, 0.25);
          box-shadow: 0px 5px 7px rgba(0, 0, 0, 0.25);
  -webkit-transition: all .2s ease-in-out;
  transition: all .2s ease-in-out; }
  .service-card > img {
    max-width: 300px;
    min-height: 230px; }
  .service-card button {
    position: relative;
    bottom: 0;
    margin: 0;
    background-color: #A3E4BE;
    color: #FAFAFA;
    width: 100%;
    padding: 8px 35px;
    margin-top: 16px;
    font-size: 1em;
    font-weight: 600;
    letter-spacing: 1.2px;
    border: solid 2px transparent;
    border-radius: 3.00px;
    -webkit-transition: all .2s ease-in;
    transition: all .2s ease-in;
    text-transform: uppercase;
    outline: none; }
  .service-card button:hover {
    -webkit-box-shadow: 0px 2px 14px rgba(0, 0, 0, 0.25);
            box-shadow: 0px 2px 14px rgba(0, 0, 0, 0.25); }
  .service-card button:active {
    background-color: #74a588; }

.service-card:hover {
  -webkit-box-shadow: 0px 8px 14px rgba(0, 0, 0, 0.35);
          box-shadow: 0px 8px 14px rgba(0, 0, 0, 0.35); }

.description h1 {
  font-size: 48px;
  margin-top: 140px;
  margin-bottom: 20px;
  color: #9B51E0; }

.description h4 {
  margin-top: 0px;
  margin-bottom: 20px;
  font-size: 20px;
  color: #FAFAFA; }

@-webkit-keyframes fadeIn {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

@keyframes fadeIn {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

.fadeIn {
  -webkit-animation-name: fadeIn;
  animation-name: fadeIn; }

@-webkit-keyframes fadeInLeft {
  from {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
    transform: translate3d(-100%, 0, 0); }
  to {
    opacity: 1;
    -webkit-transform: none;
    transform: none; } }

@keyframes fadeInLeft {
  from {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
    transform: translate3d(-100%, 0, 0); }
  to {
    opacity: 1;
    -webkit-transform: none;
    transform: none; } }

.fadeInLeft {
  -webkit-animation-name: fadeInLeft;
  animation-name: fadeInLeft; }

.fadeInLeft:nth-child(2) {
  -webkit-animation-delay: -0.3s;
          animation-delay: -0.3s; }

.fadeInLeft:nth-child(3) {
  -webkit-animation-delay: -0.5s;
          animation-delay: -0.5s; }

@-webkit-keyframes fadeInLeftBig {
  from {
    opacity: 0;
    -webkit-transform: translate3d(-2000px, 0, 0);
    transform: translate3d(-2000px, 0, 0); }
  to {
    opacity: 1;
    -webkit-transform: none;
    transform: none; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
